{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling","program":"/home/ruby/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":[],"output":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/target/rls/debug/deps/librefactoring_modularity_and_error_handling-019bc33356e2a92b.rmeta"},"prelude":{"crate_id":{"name":"refactoring_modularity_and_error_handling","disambiguator":[8410476304809135190,17787174111133416308]},"crate_root":"src","external_crates":[{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":18,"id":{"name":"test","disambiguator":[11210276847814783645,2773544868598882744]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":19,"id":{"name":"getopts","disambiguator":[4705529767539928894,17476467085385069097]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":20,"id":{"name":"rustc_std_workspace_std","disambiguator":[14833478783760201629,9527561138977407712]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":21,"id":{"name":"unicode_width","disambiguator":[4248410893133350361,3739929509123831802]}},{"file_name":"/home/ruby/projects/AdventuresInRust/rust_documentation_projects_and_notes/12AnIoProjectMakingACommandLineProgram/refactoring_modularity_and_error_handling/src/main.rs","num":22,"id":{"name":"term","disambiguator":[15126710345781178654,8364421719909429673]}}],"span":{"file_name":"src/main.rs","byte_start":1402,"byte_end":5675,"line_start":24,"line_end":99,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":2129},"span":{"file_name":"src/main.rs","byte_start":1411,"byte_end":1414,"line_start":24,"line_end":24,"column_start":10,"column_end":13},"alias_span":null,"name":"env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":20},"span":{"file_name":"src/main.rs","byte_start":1411,"byte_end":1414,"line_start":24,"line_end":24,"column_start":10,"column_end":13},"alias_span":null,"name":"env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":5905},"span":{"file_name":"src/main.rs","byte_start":1490,"byte_end":1497,"line_start":25,"line_end":25,"column_start":10,"column_end":17},"alias_span":null,"name":"process","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":2324},"span":{"file_name":"src/lib.rs","byte_start":6807,"byte_end":6812,"line_start":1,"line_end":1,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":2951},"span":{"file_name":"src/lib.rs","byte_start":6856,"byte_end":6858,"line_start":2,"line_end":2,"column_start":10,"column_end":12},"alias_span":null,"name":"fs","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"src/main.rs","byte_start":1571,"byte_end":1577,"line_start":28,"line_end":28,"column_start":17,"column_end":23},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/main.rs","byte_start":1402,"byte_end":5675,"line_start":24,"line_end":99,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src/main.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":27}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lib","qualname":"::lib","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"src/lib.rs","byte_start":6931,"byte_end":6937,"line_start":4,"line_end":4,"column_start":12,"column_end":18},"name":"Config","qualname":"::lib::Config","value":"Config { query, filename }","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":17},"span":{"file_name":"src/lib.rs","byte_start":6948,"byte_end":6953,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"query","qualname":"::lib::Config::query","value":"std::string::String","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":18},"span":{"file_name":"src/lib.rs","byte_start":6971,"byte_end":6979,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"name":"filename","qualname":"::lib::Config::filename","value":"std::string::String","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741844},"span":{"file_name":"src/lib.rs","byte_start":7021,"byte_end":7025,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"args","qualname":"<Config>::new::args","value":"&[std::string::String]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"src/lib.rs","byte_start":7017,"byte_end":7020,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new(&[String]) -> Result<Config, &str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1476395028},"span":{"file_name":"src/lib.rs","byte_start":7201,"byte_end":7206,"line_start":14,"line_end":14,"column_start":13,"column_end":18},"name":"query","qualname":"query$HirId { owner: DefId(0:20 ~ refactoring_modularity_and_error_handling[74b8]::lib::{impl#0}::new), local_id: 26 }","value":"std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":3288334356},"span":{"file_name":"src/lib.rs","byte_start":7238,"byte_end":7246,"line_start":15,"line_end":15,"column_start":13,"column_end":21},"name":"filename","qualname":"filename$HirId { owner: DefId(0:20 ~ refactoring_modularity_and_error_handling[74b8]::lib::{impl#0}::new), local_id: 35 }","value":"std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741845},"span":{"file_name":"src/lib.rs","byte_start":9285,"byte_end":9291,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"config","qualname":"::lib::run::config","value":"lib::Config","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"src/lib.rs","byte_start":9281,"byte_end":9284,"line_start":52,"line_end":52,"column_start":8,"column_end":11},"name":"run","qualname":"::lib::run","value":"pub fn run(Config) -> Result<(), Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":"We’ve made three significant changes here. \n * First, we changed the return type of the run function to Result<(), Box<dyn Error>>. \n * This function previously returned the unit type, (), and we keep that as the value returned in the Ok case.\n * For the error type, we used the trait object Box<dyn Error> \n * (and we’ve brought std::error::Error into scope with a use statement at the top). \n * We’ll cover trait objects in Chapter 17. \n * For now, just know that Box<dyn Error> means the function will return a type that implements the Error trait, \n * but we don’t have to specify what particular type the return value will be. \n * This gives us flexibility to return error values that may be of different types in different error cases. \n * The dyn keyword is short for “dynamic.”\n * \n * Second, we’ve removed the call to expect in favor of the ? operator, as we talked about in Chapter 9. \n * Rather than panic! on an error, ? will return the error value from the current function for the caller to handle.\n * \n * Third, the run function now returns an Ok value in the success case. \n * We’ve declared the run function’s success type as () in the signature, which means we need to wrap the unit type value in the Ok value. \n * his Ok(()) syntax might look a bit strange at first, \n * but using () like this is the idiomatic way to indicate that we’re calling run for its side effects only; \n * it doesn’t return a value we need.","sig":null,"attributes":[{"value":"*We’ve made three significant changes here. \n * First, we changed the return type of the run function to Result<(), Box<dyn Error>>. \n * This function previously returned the unit type, (), and we keep that as the value returned in the Ok case.\n * For the error type, we used the trait object Box<dyn Error> \n * (and we’ve brought std::error::Error into scope with a use statement at the top). \n * We’ll cover trait objects in Chapter 17. \n * For now, just know that Box<dyn Error> means the function will return a type that implements the Error trait, \n * but we don’t have to specify what particular type the return value will be. \n * This gives us flexibility to return error values that may be of different types in different error cases. \n * The dyn keyword is short for “dynamic.”\n * \n * Second, we’ve removed the call to expect in favor of the ? operator, as we talked about in Chapter 9. \n * Rather than panic! on an error, ? will return the error value from the current function for the caller to handle.\n * \n * Third, the run function now returns an Ok value in the success case. \n * We’ve declared the run function’s success type as () in the signature, which means we need to wrap the unit type value in the Ok value. \n * his Ok(()) syntax might look a bit strange at first, \n * but using () like this is the idiomatic way to indicate that we’re calling run for its side effects only; \n * it doesn’t return a value we need.\n*/","span":{"file_name":"src/lib.rs","byte_start":7811,"byte_end":9273,"line_start":32,"line_end":51,"column_start":1,"column_end":3}}]},{"kind":"Local","id":{"krate":0,"index":3087007765},"span":{"file_name":"src/lib.rs","byte_start":9341,"byte_end":9349,"line_start":53,"line_end":53,"column_start":9,"column_end":17},"name":"contents","qualname":"contents$HirId { owner: DefId(0:21 ~ refactoring_modularity_and_error_handling[74b8]::lib::run), local_id: 29 }","value":"std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2281701397},"span":{"file_name":"src/lib.rs","byte_start":9387,"byte_end":9388,"line_start":53,"line_end":53,"column_start":55,"column_end":56},"name":"err","qualname":"err$HirId { owner: DefId(0:21 ~ refactoring_modularity_and_error_handling[74b8]::lib::run), local_id: 17 }","value":"std::io::Error","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":805306389},"span":{"file_name":"src/lib.rs","byte_start":9352,"byte_end":9388,"line_start":53,"line_end":53,"column_start":20,"column_end":56},"name":"val","qualname":"val$HirId { owner: DefId(0:21 ~ refactoring_modularity_and_error_handling[74b8]::lib::run), local_id: 12 }","value":"std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"src/main.rs","byte_start":4257,"byte_end":4261,"line_start":70,"line_end":70,"column_start":4,"column_end":8},"name":"main","qualname":"::main","value":"fn main()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}}]},{"kind":"Local","id":{"krate":0,"index":805306393},"span":{"file_name":"src/main.rs","byte_start":4274,"byte_end":4278,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"name":"args","qualname":"args$HirId { owner: DefId(0:25 ~ refactoring_modularity_and_error_handling[74b8]::main), local_id: 12 }","value":"std::vec::Vec<std::string::String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":3388997657},"span":{"file_name":"src/main.rs","byte_start":4392,"byte_end":4398,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"name":"config","qualname":"config$HirId { owner: DefId(0:25 ~ refactoring_modularity_and_error_handling[74b8]::main), local_id: 83 }","value":"lib::Config","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":402653209},"span":{"file_name":"src/main.rs","byte_start":4436,"byte_end":4439,"line_start":73,"line_end":73,"column_start":53,"column_end":56},"name":"err","qualname":"$HirId { owner: DefId(0:25 ~ refactoring_modularity_and_error_handling[74b8]::main), local_id: 80 }::err","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2097152025},"span":{"file_name":"src/main.rs","byte_start":5108,"byte_end":5109,"line_start":89,"line_end":89,"column_start":16,"column_end":17},"name":"e","qualname":"e$HirId { owner: DefId(0:25 ~ refactoring_modularity_and_error_handling[74b8]::main), local_id: 190 }","value":"std::boxed::Box<dyn std::error::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"src/lib.rs","byte_start":6997,"byte_end":7003,"line_start":9,"line_end":9,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":1406,"byte_end":1409,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":1485,"byte_end":1488,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":1550,"byte_end":1553,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":6795,"byte_end":6798,"line_start":1,"line_end":1,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":6800,"byte_end":6805,"line_start":1,"line_end":1,"column_start":10,"column_end":15},"ref_id":{"krate":1,"index":2270}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":6851,"byte_end":6854,"line_start":2,"line_end":2,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":6955,"byte_end":6961,"line_start":5,"line_end":5,"column_start":16,"column_end":22},"ref_id":{"krate":5,"index":7216}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":6981,"byte_end":6987,"line_start":6,"line_end":6,"column_start":19,"column_end":25},"ref_id":{"krate":5,"index":7216}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":6997,"byte_end":7003,"line_start":9,"line_end":9,"column_start":6,"column_end":12},"ref_id":{"krate":0,"index":16}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":7029,"byte_end":7035,"line_start":10,"line_end":10,"column_start":24,"column_end":30},"ref_id":{"krate":5,"index":7216}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":7041,"byte_end":7047,"line_start":10,"line_end":10,"column_start":36,"column_end":42},"ref_id":{"krate":2,"index":37485}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":7048,"byte_end":7054,"line_start":10,"line_end":10,"column_start":43,"column_end":49},"ref_id":{"krate":0,"index":16}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":7080,"byte_end":7083,"line_start":11,"line_end":11,"column_start":17,"column_end":20},"ref_id":{"krate":2,"index":10453}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":7075,"byte_end":7079,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"ref_id":{"krate":0,"index":1073741844}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":7150,"byte_end":7153,"line_start":12,"line_end":12,"column_start":20,"column_end":23},"ref_id":{"krate":2,"index":37491}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":7217,"byte_end":7222,"line_start":14,"line_end":14,"column_start":29,"column_end":34},"ref_id":{"krate":2,"index":2448}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":7209,"byte_end":7213,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"ref_id":{"krate":0,"index":1073741844}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":7257,"byte_end":7262,"line_start":15,"line_end":15,"column_start":32,"column_end":37},"ref_id":{"krate":2,"index":2448}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":7249,"byte_end":7253,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"ref_id":{"krate":0,"index":1073741844}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":7275,"byte_end":7277,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"ref_id":{"krate":2,"index":37488}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":7278,"byte_end":7284,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"ref_id":{"krate":0,"index":16}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":7287,"byte_end":7292,"line_start":17,"line_end":17,"column_start":21,"column_end":26},"ref_id":{"krate":0,"index":17}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":7287,"byte_end":7292,"line_start":17,"line_end":17,"column_start":21,"column_end":26},"ref_id":{"krate":0,"index":1476395028}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":7294,"byte_end":7302,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"ref_id":{"krate":0,"index":18}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":7294,"byte_end":7302,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"ref_id":{"krate":0,"index":3288334356}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":9293,"byte_end":9299,"line_start":52,"line_end":52,"column_start":20,"column_end":26},"ref_id":{"krate":0,"index":16}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":9304,"byte_end":9310,"line_start":52,"line_end":52,"column_start":31,"column_end":37},"ref_id":{"krate":2,"index":37485}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":9315,"byte_end":9318,"line_start":52,"line_end":52,"column_start":42,"column_end":45},"ref_id":{"krate":5,"index":195}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":9356,"byte_end":9370,"line_start":53,"line_end":53,"column_start":24,"column_end":38},"ref_id":{"krate":1,"index":3019}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":9352,"byte_end":9354,"line_start":53,"line_end":53,"column_start":20,"column_end":22},"ref_id":{"krate":1,"index":2951}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":9371,"byte_end":9377,"line_start":53,"line_end":53,"column_start":39,"column_end":45},"ref_id":{"krate":0,"index":1073741845}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":9378,"byte_end":9386,"line_start":53,"line_end":53,"column_start":46,"column_end":54},"ref_id":{"krate":0,"index":18}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":9352,"byte_end":9388,"line_start":53,"line_end":53,"column_start":20,"column_end":56},"ref_id":{"krate":2,"index":37490}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":9422,"byte_end":9430,"line_start":55,"line_end":55,"column_start":32,"column_end":40},"ref_id":{"krate":0,"index":3087007765}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":9438,"byte_end":9440,"line_start":57,"line_end":57,"column_start":5,"column_end":7},"ref_id":{"krate":2,"index":37488}},{"kind":"Type","span":{"file_name":"src/main.rs","byte_start":1559,"byte_end":1564,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":1566,"byte_end":1569,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"ref_id":{"krate":0,"index":9}},{"kind":"Type","span":{"file_name":"src/main.rs","byte_start":4280,"byte_end":4283,"line_start":71,"line_end":71,"column_start":15,"column_end":18},"ref_id":{"krate":5,"index":6703}},{"kind":"Type","span":{"file_name":"src/main.rs","byte_start":4284,"byte_end":4290,"line_start":71,"line_end":71,"column_start":19,"column_end":25},"ref_id":{"krate":5,"index":7216}},{"kind":"Function","span":{"file_name":"src/main.rs","byte_start":4306,"byte_end":4313,"line_start":71,"line_end":71,"column_start":41,"column_end":48},"ref_id":{"krate":2,"index":7218}},{"kind":"Function","span":{"file_name":"src/main.rs","byte_start":4299,"byte_end":4303,"line_start":71,"line_end":71,"column_start":34,"column_end":38},"ref_id":{"krate":1,"index":2228}},{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":4294,"byte_end":4297,"line_start":71,"line_end":71,"column_start":29,"column_end":32},"ref_id":{"krate":1,"index":2129}},{"kind":"Function","span":{"file_name":"src/main.rs","byte_start":4420,"byte_end":4434,"line_start":73,"line_end":73,"column_start":37,"column_end":51},"ref_id":{"krate":2,"index":8051}},{"kind":"Function","span":{"file_name":"src/main.rs","byte_start":4409,"byte_end":4412,"line_start":73,"line_end":73,"column_start":26,"column_end":29},"ref_id":{"krate":0,"index":20}},{"kind":"Type","span":{"file_name":"src/main.rs","byte_start":4401,"byte_end":4407,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"ref_id":{"krate":0,"index":16}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":4414,"byte_end":4418,"line_start":73,"line_end":73,"column_start":31,"column_end":35},"ref_id":{"krate":0,"index":805306393}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":4493,"byte_end":4496,"line_start":74,"line_end":74,"column_start":51,"column_end":54},"ref_id":{"krate":0,"index":402653209}},{"kind":"Function","span":{"file_name":"src/main.rs","byte_start":4516,"byte_end":4520,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"ref_id":{"krate":1,"index":6117}},{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":4507,"byte_end":4514,"line_start":75,"line_end":75,"column_start":9,"column_end":16},"ref_id":{"krate":1,"index":5905}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":4988,"byte_end":4994,"line_start":85,"line_end":85,"column_start":34,"column_end":40},"ref_id":{"krate":0,"index":3388997657}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":4995,"byte_end":5000,"line_start":85,"line_end":85,"column_start":41,"column_end":46},"ref_id":{"krate":0,"index":17}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":5030,"byte_end":5036,"line_start":86,"line_end":86,"column_start":28,"column_end":34},"ref_id":{"krate":0,"index":3388997657}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":5037,"byte_end":5045,"line_start":86,"line_end":86,"column_start":35,"column_end":43},"ref_id":{"krate":0,"index":18}},{"kind":"Function","span":{"file_name":"src/main.rs","byte_start":5118,"byte_end":5121,"line_start":89,"line_end":89,"column_start":26,"column_end":29},"ref_id":{"krate":0,"index":21}},{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":5113,"byte_end":5116,"line_start":89,"line_end":89,"column_start":21,"column_end":24},"ref_id":{"krate":0,"index":9}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":5122,"byte_end":5128,"line_start":89,"line_end":89,"column_start":30,"column_end":36},"ref_id":{"krate":0,"index":3388997657}},{"kind":"Type","span":{"file_name":"src/main.rs","byte_start":5104,"byte_end":5107,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"ref_id":{"krate":2,"index":37491}},{"kind":"Type","span":{"file_name":"src/main.rs","byte_start":5104,"byte_end":5107,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"ref_id":{"krate":2,"index":37491}},{"kind":"Variable","span":{"file_name":"src/main.rs","byte_start":5174,"byte_end":5175,"line_start":90,"line_end":90,"column_start":43,"column_end":44},"ref_id":{"krate":0,"index":2097152025}},{"kind":"Function","span":{"file_name":"src/main.rs","byte_start":5196,"byte_end":5200,"line_start":92,"line_end":92,"column_start":18,"column_end":22},"ref_id":{"krate":1,"index":6117}},{"kind":"Mod","span":{"file_name":"src/main.rs","byte_start":5187,"byte_end":5194,"line_start":92,"line_end":92,"column_start":9,"column_end":16},"ref_id":{"krate":1,"index":5905}}],"macro_refs":[],"relations":[{"span":{"file_name":"src/lib.rs","byte_start":6997,"byte_end":7003,"line_start":9,"line_end":9,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}}]}